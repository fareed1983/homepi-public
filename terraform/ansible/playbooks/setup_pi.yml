---
- name: Configure Raspberry Pi
  hosts: raspberrypi
  become: true
  vars:
    pi_host: "{{ lookup('env', 'PI_HOST') }}"

  tasks:

    - name: Ensure apt is updated
      apt:
        update_cache: yes
        upgrade: dist
    
    - name: Ensure UFW is installed
      apt:
        name: ufw
        state: present

    - name: Allow only some ports via UFW
      ufw:
        rule: allow
        direction: in
        port: "{{ item }}"
        proto: tcp
      with_items:
        - '22'
        - '80'
        - '443'
        - '6443'

    - name: Default deny incoming
      ufw:
        rule: deny
        direction: in
    
    - name: Enable UFW
      ufw:
        state: enabled

    - name: Setting secure SSH options
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?{{ item.option }}"
        line: "{{ item.option }} {{item.value}}"
        create: yes
        backup: no
      loop:
        - { option: "PasswordAuthentication", value: "no" }
        - { option: "ChallengeResponseAuthentication", value: "no" }
        - { option: "UsePAM", value: "no" }
        - { option: "PermitRootLogin", value: "no" }
        - { option: "PubkeyAuthentication", value: "yes" }
      notify: Restart SSH

    - name: Cat current cmdline
      register: cmdline_content
      command: cat /boot/firmware/cmdline.txt
      changed_when: false

    - name: Enable cgroup memory in cmdline.txt
      lineinfile:
        path: /boot/firmware/cmdline.txt
        # This regex captures the entire line as group 1
        # The 'line' puts cgroup_memory=1 cgroup_enable=memory at the end of that line
        regexp: '^(.*)$'
        line: '\1 cgroup_memory=1 cgroup_enable=memory'
        backrefs: yes
      when: "'cgroup_memory=1 cgroup_enable=memory' not in cmdline_content.stdout"

    - name: Check if K3s is installed
      stat:
        path: /usr/local/bin/k3s
      register: k3s_bin

    - name: Install K3s
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable traefik  --tls-san {{ pi_host }}" sh -
      # We disable trafik as the default ingress controller
      when: not k3s_bin.stat.exists

    - name: Fetch K3s kubeconfig from Pi
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ../../terraform/k3s.yaml
        flat: yes
      become: yes

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted